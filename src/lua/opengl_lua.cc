/*
 * opengl_lua.cc
 * Author: Samuel Vargas
 * Date: 05/07/2017
 */

#include "opengl_lua.h"
#include "framebuffer.h"
#include "glshader.h"
#include "glmodel.h"
#include "glm.hpp"
#include "glm/gtc/matrix_transform.hpp"

void OpenGLWrapper::bind(sol::state& state) {

   auto gl = state.create_named_table("gl");

   OpenGLWrapper::bindGL3Enums(gl);
   OpenGLWrapper::bindCoreEnums(gl);
   OpenGLWrapper::bindFboEnums(gl);

   /// glsl_sandbox defined enums
   gl.create_named("GLVec",
         "Vec3", GLVec::Vec1,
         "Vec2", GLVec::Vec2,
         "Vec3", GLVec::Vec3,
         "Vec4", GLVec::Vec4
   );

   gl.create_named("GLAttrib",
         "Position", GLAttrib::Position,
         "Color",    GLAttrib::Color,
         "Normal",   GLAttrib::Normal
   );

   /// Register mat4s as existing in Lua
   gl.new_usertype<glm::mat4>("mat4",
         sol::constructors<glm::mat4()>()
   );

   gl["mat4"]["projection"] =
      [] (float fov, float aspect, float near, float far) {
            return glm::perspective(fov, aspect, near, far);
   };

   gl["mat4"]["identity"] = []  { return glm::mat4(); };

   /// glm
   gl.new_usertype<glm::vec3>("vec3",
         sol::constructors<glm::vec3(), glm::vec3(float, float, float)>(),
         "x", &glm::vec3::x,
         "y", &glm::vec3::y,
         "z", &glm::vec3::z
   );

   /// GPUBuffer
   gl.new_usertype<GPUBuffer>("GPUBuffer",
         sol::constructors<GPUBuffer(size_t, sol::table)>(),
         "bind",    &GPUBuffer::bind,
         "unbind",  &GPUBuffer::unbind,
         "insert",  static_cast<void (GPUBuffer::*)(unsigned char, sol::table)>(&GPUBuffer::insert)
   );

   /// Framebuffers
   gl.new_usertype<Framebuffer>("Framebuffer",
         sol::constructors<Framebuffer()>(),
         "bind",       &Framebuffer::bind,
         "unbind",     &Framebuffer::unbind,
         "addTexture", &Framebuffer::addTexture,
         "render",     &Framebuffer::render
   );

   /// Shaders
   gl.new_usertype<GLShader>("Shader",
         sol::constructors<GLShader(sol::table)>(),
         "bind",       &GLShader::bind,
         "unbind",     &GLShader::unbind,
         "upload",     &GLShader::upload
   );

   /// Models
   gl.new_usertype<GLModel>("Model",
         "new", sol::no_constructor,
         "loadFromWavefront",       &GLModel::loadFromWavefront,
         "getPosition",             &GLModel::getPosition,
         "getRotation",             &GLModel::getRotation,
         "getScale",                &GLModel::getScale,
         "getTransformationMatrix", &GLModel::getTransformationMatrix,
         "bind",                    &GLModel::bind,
         "unbind",                  &GLModel::unbind,
         "render",                  &GLModel::render
   );

}

void OpenGLWrapper::bindGL3Enums(sol::table& table) {
   auto e = table;
   e["CLIP_DISTANCE0"] =  GL_CLIP_PLANE0;
   e["CLIP_DISTANCE1"] =  GL_CLIP_PLANE1;
   e["CLIP_DISTANCE2"] =  GL_CLIP_PLANE2;
   e["CLIP_DISTANCE3"] =  GL_CLIP_PLANE3;
   e["CLIP_DISTANCE4"] =  GL_CLIP_PLANE4;
   e["CLIP_DISTANCE5"] =  GL_CLIP_PLANE5;
   e["COMPARE_REF_TO_TEXTURE"] =  GL_COMPARE_R_TO_TEXTURE_ARB;
   e["MAX_CLIP_DISTANCES"] =  GL_MAX_CLIP_PLANES;
   e["MAX_VARYING_COMPONENTS"] =  GL_MAX_VARYING_FLOATS;
   e["CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT"] =  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT;
   e["MAJOR_VERSION"] =  GL_MAJOR_VERSION;
   e["MINOR_VERSION"] = GL_MINOR_VERSION;
   e["NUM_EXTENSIONS"] = GL_NUM_EXTENSIONS;
   e["CONTEXT_FLAGS"] = GL_CONTEXT_FLAGS;
   e["DEPTH_BUFFER"] = GL_DEPTH_BUFFER;
   e["STENCIL_BUFFER"] = GL_STENCIL_BUFFER;
   e["RGBA32F"] = GL_RGBA32F;
   e["RGB32F"] = GL_RGB32F;
   e["RGBA16F"] = GL_RGBA16F;
   e["RGB16F"] = GL_RGB16F;
   e["VERTEX_ATTRIB_ARRAY_INTEGER"] = GL_VERTEX_ATTRIB_ARRAY_INTEGER;
   e["MAX_ARRAY_TEXTURE_LAYERS"] = GL_MAX_ARRAY_TEXTURE_LAYERS;
   e["MIN_PROGRAM_TEXEL_OFFSET"] = GL_MIN_PROGRAM_TEXEL_OFFSET;
   e["MAX_PROGRAM_TEXEL_OFFSET"] = GL_MAX_PROGRAM_TEXEL_OFFSET;
   e["CLAMP_VERTEX_COLOR"] = GL_CLAMP_VERTEX_COLOR;
   e["CLAMP_FRAGMENT_COLOR"] = GL_CLAMP_FRAGMENT_COLOR;
   e["CLAMP_READ_COLOR"] = GL_CLAMP_READ_COLOR;
   e["FIXED_ONLY"] = GL_FIXED_ONLY;
   e["TEXTURE_RED_TYPE"] = GL_TEXTURE_RED_TYPE;
   e["TEXTURE_GREEN_TYPE"] = GL_TEXTURE_GREEN_TYPE;
   e["TEXTURE_BLUE_TYPE"] = GL_TEXTURE_BLUE_TYPE;
   e["TEXTURE_ALPHA_TYPE"] = GL_TEXTURE_ALPHA_TYPE;
   e["TEXTURE_LUMINANCE_TYPE"] = GL_TEXTURE_LUMINANCE_TYPE;
   e["TEXTURE_INTENSITY_TYPE"] = GL_TEXTURE_INTENSITY_TYPE;
   e["TEXTURE_DEPTH_TYPE"] = GL_TEXTURE_DEPTH_TYPE;
   e["TEXTURE_1D_ARRAY"] = GL_TEXTURE_1D_ARRAY;
   e["PROXY_TEXTURE_1D_ARRAY"] = GL_PROXY_TEXTURE_1D_ARRAY;
   e["TEXTURE_2D_ARRAY"] = GL_TEXTURE_2D_ARRAY;
   e["PROXY_TEXTURE_2D_ARRAY"] = GL_PROXY_TEXTURE_2D_ARRAY;
   e["TEXTURE_BINDING_1D_ARRAY"] = GL_TEXTURE_BINDING_1D_ARRAY;
   e["TEXTURE_BINDING_2D_ARRAY"] = GL_TEXTURE_BINDING_2D_ARRAY;
   e["R11F_G11F_B10F"] = GL_R11F_G11F_B10F;
   e["UNSIGNED_INT_10F_11F_11F_REV"] = GL_UNSIGNED_INT_10F_11F_11F_REV;
   e["RGB9_E5"] = GL_RGB9_E5;
   e["UNSIGNED_INT_5_9_9_9_REV"] = GL_UNSIGNED_INT_5_9_9_9_REV;
   e["TEXTURE_SHARED_SIZE"] = GL_TEXTURE_SHARED_SIZE;
   e["TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH"] = GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH;
   e["TRANSFORM_FEEDBACK_BUFFER_MODE"] = GL_TRANSFORM_FEEDBACK_BUFFER_MODE;
   e["MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"] = GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
   e["TRANSFORM_FEEDBACK_VARYINGS"] = GL_TRANSFORM_FEEDBACK_VARYINGS;
   e["TRANSFORM_FEEDBACK_BUFFER_START"] = GL_TRANSFORM_FEEDBACK_BUFFER_START;
   e["TRANSFORM_FEEDBACK_BUFFER_SIZE"] = GL_TRANSFORM_FEEDBACK_BUFFER_SIZE;
   e["PRIMITIVES_GENERATED"] = GL_PRIMITIVES_GENERATED;
   e["TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"] = GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
   e["RASTERIZER_DISCARD"] = GL_RASTERIZER_DISCARD;
   e["MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"] = GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
   e["MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"] = GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
   e["INTERLEAVED_ATTRIBS"] = GL_INTERLEAVED_ATTRIBS;
   e["SEPARATE_ATTRIBS"] = GL_SEPARATE_ATTRIBS;
   e["TRANSFORM_FEEDBACK_BUFFER"] = GL_TRANSFORM_FEEDBACK_BUFFER;
   e["TRANSFORM_FEEDBACK_BUFFER_BINDING"] = GL_TRANSFORM_FEEDBACK_BUFFER_BINDING;
   e["RGBA32UI"] = GL_RGBA32UI;
   e["RGB32UI"] = GL_RGB32UI;
   e["RGBA16UI"] = GL_RGBA16UI;
   e["RGB16UI"] = GL_RGB16UI;
   e["RGBA8UI"] = GL_RGBA8UI;
   e["RGB8UI"] = GL_RGB8UI;
   e["RGBA32I"] = GL_RGBA32I;
   e["RGB32I"] = GL_RGB32I;
   e["RGBA16I"] = GL_RGBA16I;
   e["RGB16I"] = GL_RGB16I;
   e["RGBA8I"] = GL_RGBA8I;
   e["RGB8I"] = GL_RGB8I;
   e["RED_INTEGER"] = GL_RED_INTEGER;
   e["GREEN_INTEGER"] = GL_GREEN_INTEGER;
   e["BLUE_INTEGER"] = GL_BLUE_INTEGER;
   e["ALPHA_INTEGER"] = GL_ALPHA_INTEGER;
   e["RGB_INTEGER"] = GL_RGB_INTEGER;
   e["RGBA_INTEGER"] = GL_RGBA_INTEGER;
   e["BGR_INTEGER"] = GL_BGR_INTEGER;
   e["BGRA_INTEGER"] = GL_BGRA_INTEGER;
   e["SAMPLER_1D_ARRAY"] = GL_SAMPLER_1D_ARRAY;
   e["SAMPLER_2D_ARRAY"] = GL_SAMPLER_2D_ARRAY;
   e["SAMPLER_1D_ARRAY_SHADOW"] = GL_SAMPLER_1D_ARRAY_SHADOW;
   e["SAMPLER_2D_ARRAY_SHADOW"] = GL_SAMPLER_2D_ARRAY_SHADOW;
   e["SAMPLER_CUBE_SHADOW"] = GL_SAMPLER_CUBE_SHADOW;
   e["UNSIGNED_INT_VEC2"] = GL_UNSIGNED_INT_VEC2;
   e["UNSIGNED_INT_VEC3"] = GL_UNSIGNED_INT_VEC3;
   e["UNSIGNED_INT_VEC4"] = GL_UNSIGNED_INT_VEC4;
   e["INT_SAMPLER_1D"] = GL_INT_SAMPLER_1D;
   e["INT_SAMPLER_2D"] = GL_INT_SAMPLER_2D;
   e["INT_SAMPLER_3D"] = GL_INT_SAMPLER_3D;
   e["INT_SAMPLER_CUBE"] = GL_INT_SAMPLER_CUBE;
   e["INT_SAMPLER_1D_ARRAY"] = GL_INT_SAMPLER_1D_ARRAY;
   e["INT_SAMPLER_2D_ARRAY"] = GL_INT_SAMPLER_2D_ARRAY;
   e["UNSIGNED_INT_SAMPLER_1D"] = GL_UNSIGNED_INT_SAMPLER_1D;
   e["UNSIGNED_INT_SAMPLER_2D"] = GL_UNSIGNED_INT_SAMPLER_2D;
   e["UNSIGNED_INT_SAMPLER_3D"] = GL_UNSIGNED_INT_SAMPLER_3D;
   e["UNSIGNED_INT_SAMPLER_CUBE"] = GL_UNSIGNED_INT_SAMPLER_CUBE;
   e["UNSIGNED_INT_SAMPLER_1D_ARRAY"] = GL_UNSIGNED_INT_SAMPLER_1D_ARRAY;
   e["UNSIGNED_INT_SAMPLER_2D_ARRAY"] = GL_UNSIGNED_INT_SAMPLER_2D_ARRAY;
   e["QUERY_WAIT"] = GL_QUERY_WAIT;
   e["QUERY_NO_WAIT"] = GL_QUERY_NO_WAIT;
   e["QUERY_BY_REGION_WAIT"] = GL_QUERY_BY_REGION_WAIT;
   e["QUERY_BY_REGION_NO_WAIT"] = GL_QUERY_BY_REGION_NO_WAIT;
}

/// taken from glew.h
void OpenGLWrapper::bindCoreEnums(sol::table& table) {
   auto e = table;
   e["ZERO"] = GL_ZERO;
   e["FALSE"] = GL_FALSE;
   e["LOGIC_OP"] = GL_LOGIC_OP;
   e["NONE"] = GL_NONE;
   e["TEXTURE_COMPONENTS"] = GL_TEXTURE_COMPONENTS;
   e["NO_ERROR"] = GL_NO_ERROR;
   e["POINTS"] = GL_POINTS;
   e["CURRENT_BIT"] = GL_CURRENT_BIT;
   e["TRUE"] = GL_TRUE;
   e["ONE"] = GL_ONE;
   e["CLIENT_PIXEL_STORE_BIT"] = GL_CLIENT_PIXEL_STORE_BIT;
   e["LINES"] = GL_LINES;
   e["LINE_LOOP"] = GL_LINE_LOOP;
   e["POINT_BIT"] = GL_POINT_BIT;
   e["CLIENT_VERTEX_ARRAY_BIT"] = GL_CLIENT_VERTEX_ARRAY_BIT;
   e["LINE_STRIP"] = GL_LINE_STRIP;
   e["LINE_BIT"] = GL_LINE_BIT;
   e["TRIANGLES"] = GL_TRIANGLES;
   e["TRIANGLE_STRIP"] = GL_TRIANGLE_STRIP;
   e["TRIANGLE_FAN"] = GL_TRIANGLE_FAN;
   e["QUADS"] = GL_QUADS;
   e["QUAD_STRIP"] = GL_QUAD_STRIP;
   e["POLYGON_BIT"] = GL_POLYGON_BIT;
   e["POLYGON"] = GL_POLYGON;
   e["POLYGON_STIPPLE_BIT"] = GL_POLYGON_STIPPLE_BIT;
   e["PIXEL_MODE_BIT"] = GL_PIXEL_MODE_BIT;
   e["LIGHTING_BIT"] = GL_LIGHTING_BIT;
   e["FOG_BIT"] = GL_FOG_BIT;
   e["DEPTH_BUFFER_BIT"] = GL_DEPTH_BUFFER_BIT;
   e["ACCUM"] = GL_ACCUM;
   e["LOAD"] = GL_LOAD;
   e["RETURN"] = GL_RETURN;
   e["MULT"] = GL_MULT;
   e["ADD"] = GL_ADD;
   e["NEVER"] = GL_NEVER;
   e["ACCUM_BUFFER_BIT"] = GL_ACCUM_BUFFER_BIT;
   e["LESS"] = GL_LESS;
   e["EQUAL"] = GL_EQUAL;
   e["LEQUAL"] = GL_LEQUAL;
   e["GREATER"] = GL_GREATER;
   e["NOTEQUAL"] = GL_NOTEQUAL;
   e["GEQUAL"] = GL_GEQUAL;
   e["ALWAYS"] = GL_ALWAYS;
   e["SRC_COLOR"] = GL_SRC_COLOR;
   e["ONE_MINUS_SRC_COLOR"] = GL_ONE_MINUS_SRC_COLOR;
   e["SRC_ALPHA"] = GL_SRC_ALPHA;
   e["ONE_MINUS_SRC_ALPHA"] = GL_ONE_MINUS_SRC_ALPHA;
   e["DST_ALPHA"] = GL_DST_ALPHA;
   e["ONE_MINUS_DST_ALPHA"] = GL_ONE_MINUS_DST_ALPHA;
   e["DST_COLOR"] = GL_DST_COLOR;
   e["ONE_MINUS_DST_COLOR"] = GL_ONE_MINUS_DST_COLOR;
   e["SRC_ALPHA_SATURATE"] = GL_SRC_ALPHA_SATURATE;
   e["STENCIL_BUFFER_BIT"] = GL_STENCIL_BUFFER_BIT;
   e["FRONT_LEFT"] = GL_FRONT_LEFT;
   e["FRONT_RIGHT"] = GL_FRONT_RIGHT;
   e["BACK_LEFT"] = GL_BACK_LEFT;
   e["BACK_RIGHT"] = GL_BACK_RIGHT;
   e["FRONT"] = GL_FRONT;
   e["BACK"] = GL_BACK;
   e["LEFT"] = GL_LEFT;
   e["RIGHT"] = GL_RIGHT;
   e["FRONT_AND_BACK"] = GL_FRONT_AND_BACK;
   e["AUX0"] = GL_AUX0;
   e["AUX1"] = GL_AUX1;
   e["AUX2"] = GL_AUX2;
   e["AUX3"] = GL_AUX3;
   e["INVALID_ENUM"] = GL_INVALID_ENUM;
   e["INVALID_VALUE"] = GL_INVALID_VALUE;
   e["INVALID_OPERATION"] = GL_INVALID_OPERATION;
   e["STACK_OVERFLOW"] = GL_STACK_OVERFLOW;
   e["STACK_UNDERFLOW"] = GL_STACK_UNDERFLOW;
   e["OUT_OF_MEMORY"] = GL_OUT_OF_MEMORY;
   e["2D"] = GL_2D;
   e["3D"] = GL_3D;
   e["3D_COLOR"] = GL_3D_COLOR;
   e["3D_COLOR_TEXTURE"] = GL_3D_COLOR_TEXTURE;
   e["4D_COLOR_TEXTURE"] = GL_4D_COLOR_TEXTURE;
   e["PASS_THROUGH_TOKEN"] = GL_PASS_THROUGH_TOKEN;
   e["POINT_TOKEN"] = GL_POINT_TOKEN;
   e["LINE_TOKEN"] = GL_LINE_TOKEN;
   e["POLYGON_TOKEN"] = GL_POLYGON_TOKEN;
   e["BITMAP_TOKEN"] = GL_BITMAP_TOKEN;
   e["DRAW_PIXEL_TOKEN"] = GL_DRAW_PIXEL_TOKEN;
   e["COPY_PIXEL_TOKEN"] = GL_COPY_PIXEL_TOKEN;
   e["LINE_RESET_TOKEN"] = GL_LINE_RESET_TOKEN;
   e["EXP"] = GL_EXP;
   e["VIEWPORT_BIT"] = GL_VIEWPORT_BIT;
   e["EXP2"] = GL_EXP2;
   e["CW"] = GL_CW;
   e["CCW"] = GL_CCW;
   e["COEFF"] = GL_COEFF;
   e["ORDER"] = GL_ORDER;
   e["DOMAIN"] = GL_DOMAIN;
   e["CURRENT_COLOR"] = GL_CURRENT_COLOR;
   e["CURRENT_INDEX"] = GL_CURRENT_INDEX;
   e["CURRENT_NORMAL"] = GL_CURRENT_NORMAL;
   e["CURRENT_TEXTURE_COORDS"] = GL_CURRENT_TEXTURE_COORDS;
   e["CURRENT_RASTER_COLOR"] = GL_CURRENT_RASTER_COLOR;
   e["CURRENT_RASTER_INDEX"] = GL_CURRENT_RASTER_INDEX;
   e["CURRENT_RASTER_TEXTURE_COORDS"] = GL_CURRENT_RASTER_TEXTURE_COORDS;
   e["CURRENT_RASTER_POSITION"] = GL_CURRENT_RASTER_POSITION;
   e["CURRENT_RASTER_POSITION_VALID"] = GL_CURRENT_RASTER_POSITION_VALID;
   e["CURRENT_RASTER_DISTANCE"] = GL_CURRENT_RASTER_DISTANCE;
   e["POINT_SMOOTH"] = GL_POINT_SMOOTH;
   e["POINT_SIZE"] = GL_POINT_SIZE;
   e["POINT_SIZE_RANGE"] = GL_POINT_SIZE_RANGE;
   e["POINT_SIZE_GRANULARITY"] = GL_POINT_SIZE_GRANULARITY;
   e["LINE_SMOOTH"] = GL_LINE_SMOOTH;
   e["LINE_WIDTH"] = GL_LINE_WIDTH;
   e["LINE_WIDTH_RANGE"] = GL_LINE_WIDTH_RANGE;
   e["LINE_WIDTH_GRANULARITY"] = GL_LINE_WIDTH_GRANULARITY;
   e["LINE_STIPPLE"] = GL_LINE_STIPPLE;
   e["LINE_STIPPLE_PATTERN"] = GL_LINE_STIPPLE_PATTERN;
   e["LINE_STIPPLE_REPEAT"] = GL_LINE_STIPPLE_REPEAT;
   e["LIST_MODE"] = GL_LIST_MODE;
   e["MAX_LIST_NESTING"] = GL_MAX_LIST_NESTING;
   e["LIST_BASE"] = GL_LIST_BASE;
   e["LIST_INDEX"] = GL_LIST_INDEX;
   e["POLYGON_MODE"] = GL_POLYGON_MODE;
   e["POLYGON_SMOOTH"] = GL_POLYGON_SMOOTH;
   e["POLYGON_STIPPLE"] = GL_POLYGON_STIPPLE;
   e["EDGE_FLAG"] = GL_EDGE_FLAG;
   e["CULL_FACE"] = GL_CULL_FACE;
   e["CULL_FACE_MODE"] = GL_CULL_FACE_MODE;
   e["FRONT_FACE"] = GL_FRONT_FACE;
   e["LIGHTING"] = GL_LIGHTING;
   e["LIGHT_MODEL_LOCAL_VIEWER"] = GL_LIGHT_MODEL_LOCAL_VIEWER;
   e["LIGHT_MODEL_TWO_SIDE"] = GL_LIGHT_MODEL_TWO_SIDE;
   e["LIGHT_MODEL_AMBIENT"] = GL_LIGHT_MODEL_AMBIENT;
   e["SHADE_MODEL"] = GL_SHADE_MODEL;
   e["COLOR_MATERIAL_FACE"] = GL_COLOR_MATERIAL_FACE;
   e["COLOR_MATERIAL_PARAMETER"] = GL_COLOR_MATERIAL_PARAMETER;
   e["COLOR_MATERIAL"] = GL_COLOR_MATERIAL;
   e["FOG"] = GL_FOG;
   e["FOG_INDEX"] = GL_FOG_INDEX;
   e["FOG_DENSITY"] = GL_FOG_DENSITY;
   e["FOG_START"] = GL_FOG_START;
   e["FOG_END"] = GL_FOG_END;
   e["FOG_MODE"] = GL_FOG_MODE;
   e["FOG_COLOR"] = GL_FOG_COLOR;
   e["DEPTH_RANGE"] = GL_DEPTH_RANGE;
   e["DEPTH_TEST"] = GL_DEPTH_TEST;
   e["DEPTH_WRITEMASK"] = GL_DEPTH_WRITEMASK;
   e["DEPTH_CLEAR_VALUE"] = GL_DEPTH_CLEAR_VALUE;
   e["DEPTH_FUNC"] = GL_DEPTH_FUNC;
   e["ACCUM_CLEAR_VALUE"] = GL_ACCUM_CLEAR_VALUE;
   e["STENCIL_TEST"] = GL_STENCIL_TEST;
   e["STENCIL_CLEAR_VALUE"] = GL_STENCIL_CLEAR_VALUE;
   e["STENCIL_FUNC"] = GL_STENCIL_FUNC;
   e["STENCIL_VALUE_MASK"] = GL_STENCIL_VALUE_MASK;
   e["STENCIL_FAIL"] = GL_STENCIL_FAIL;
   e["STENCIL_PASS_DEPTH_FAIL"] = GL_STENCIL_PASS_DEPTH_FAIL;
   e["STENCIL_PASS_DEPTH_PASS"] = GL_STENCIL_PASS_DEPTH_PASS;
   e["STENCIL_REF"] = GL_STENCIL_REF;
   e["STENCIL_WRITEMASK"] = GL_STENCIL_WRITEMASK;
   e["MATRIX_MODE"] = GL_MATRIX_MODE;
   e["NORMALIZE"] = GL_NORMALIZE;
   e["VIEWPORT"] = GL_VIEWPORT;
   e["MODELVIEW_STACK_DEPTH"] = GL_MODELVIEW_STACK_DEPTH;
   e["PROJECTION_STACK_DEPTH"] = GL_PROJECTION_STACK_DEPTH;
   e["TEXTURE_STACK_DEPTH"] = GL_TEXTURE_STACK_DEPTH;
   e["MODELVIEW_MATRIX"] = GL_MODELVIEW_MATRIX;
   e["PROJECTION_MATRIX"] = GL_PROJECTION_MATRIX;
   e["TEXTURE_MATRIX"] = GL_TEXTURE_MATRIX;
   e["ATTRIB_STACK_DEPTH"] = GL_ATTRIB_STACK_DEPTH;
   e["CLIENT_ATTRIB_STACK_DEPTH"] = GL_CLIENT_ATTRIB_STACK_DEPTH;
   e["ALPHA_TEST"] = GL_ALPHA_TEST;
   e["ALPHA_TEST_FUNC"] = GL_ALPHA_TEST_FUNC;
   e["ALPHA_TEST_REF"] = GL_ALPHA_TEST_REF;
   e["DITHER"] = GL_DITHER;
   e["BLEND_DST"] = GL_BLEND_DST;
   e["BLEND_SRC"] = GL_BLEND_SRC;
   e["BLEND"] = GL_BLEND;
   e["LOGIC_OP_MODE"] = GL_LOGIC_OP_MODE;
   e["INDEX_LOGIC_OP"] = GL_INDEX_LOGIC_OP;
   e["COLOR_LOGIC_OP"] = GL_COLOR_LOGIC_OP;
   e["AUX_BUFFERS"] = GL_AUX_BUFFERS;
   e["DRAW_BUFFER"] = GL_DRAW_BUFFER;
   e["READ_BUFFER"] = GL_READ_BUFFER;
   e["SCISSOR_BOX"] = GL_SCISSOR_BOX;
   e["SCISSOR_TEST"] = GL_SCISSOR_TEST;
   e["INDEX_CLEAR_VALUE"] = GL_INDEX_CLEAR_VALUE;
   e["INDEX_WRITEMASK"] = GL_INDEX_WRITEMASK;
   e["COLOR_CLEAR_VALUE"] = GL_COLOR_CLEAR_VALUE;
   e["COLOR_WRITEMASK"] = GL_COLOR_WRITEMASK;
   e["INDEX_MODE"] = GL_INDEX_MODE;
   e["RGBA_MODE"] = GL_RGBA_MODE;
   e["DOUBLEBUFFER"] = GL_DOUBLEBUFFER;
   e["STEREO"] = GL_STEREO;
   e["RENDER_MODE"] = GL_RENDER_MODE;
   e["PERSPECTIVE_CORRECTION_HINT"] = GL_PERSPECTIVE_CORRECTION_HINT;
   e["POINT_SMOOTH_HINT"] = GL_POINT_SMOOTH_HINT;
   e["LINE_SMOOTH_HINT"] = GL_LINE_SMOOTH_HINT;
   e["POLYGON_SMOOTH_HINT"] = GL_POLYGON_SMOOTH_HINT;
   e["FOG_HINT"] = GL_FOG_HINT;
   e["TEXTURE_GEN_S"] = GL_TEXTURE_GEN_S;
   e["TEXTURE_GEN_T"] = GL_TEXTURE_GEN_T;
   e["TEXTURE_GEN_R"] = GL_TEXTURE_GEN_R;
   e["TEXTURE_GEN_Q"] = GL_TEXTURE_GEN_Q;
   e["PIXEL_MAP_I_TO_I"] = GL_PIXEL_MAP_I_TO_I;
   e["PIXEL_MAP_S_TO_S"] = GL_PIXEL_MAP_S_TO_S;
   e["PIXEL_MAP_I_TO_R"] = GL_PIXEL_MAP_I_TO_R;
   e["PIXEL_MAP_I_TO_G"] = GL_PIXEL_MAP_I_TO_G;
   e["PIXEL_MAP_I_TO_B"] = GL_PIXEL_MAP_I_TO_B;
   e["PIXEL_MAP_I_TO_A"] = GL_PIXEL_MAP_I_TO_A;
   e["PIXEL_MAP_R_TO_R"] = GL_PIXEL_MAP_R_TO_R;
   e["PIXEL_MAP_G_TO_G"] = GL_PIXEL_MAP_G_TO_G;
   e["PIXEL_MAP_B_TO_B"] = GL_PIXEL_MAP_B_TO_B;
   e["PIXEL_MAP_A_TO_A"] = GL_PIXEL_MAP_A_TO_A;
   e["PIXEL_MAP_I_TO_I_SIZE"] = GL_PIXEL_MAP_I_TO_I_SIZE;
   e["PIXEL_MAP_S_TO_S_SIZE"] = GL_PIXEL_MAP_S_TO_S_SIZE;
   e["PIXEL_MAP_I_TO_R_SIZE"] = GL_PIXEL_MAP_I_TO_R_SIZE;
   e["PIXEL_MAP_I_TO_G_SIZE"] = GL_PIXEL_MAP_I_TO_G_SIZE;
   e["PIXEL_MAP_I_TO_B_SIZE"] = GL_PIXEL_MAP_I_TO_B_SIZE;
   e["PIXEL_MAP_I_TO_A_SIZE"] = GL_PIXEL_MAP_I_TO_A_SIZE;
   e["PIXEL_MAP_R_TO_R_SIZE"] = GL_PIXEL_MAP_R_TO_R_SIZE;
   e["PIXEL_MAP_G_TO_G_SIZE"] = GL_PIXEL_MAP_G_TO_G_SIZE;
   e["PIXEL_MAP_B_TO_B_SIZE"] = GL_PIXEL_MAP_B_TO_B_SIZE;
   e["PIXEL_MAP_A_TO_A_SIZE"] = GL_PIXEL_MAP_A_TO_A_SIZE;
   e["UNPACK_SWAP_BYTES"] = GL_UNPACK_SWAP_BYTES;
   e["UNPACK_LSB_FIRST"] = GL_UNPACK_LSB_FIRST;
   e["UNPACK_ROW_LENGTH"] = GL_UNPACK_ROW_LENGTH;
   e["UNPACK_SKIP_ROWS"] = GL_UNPACK_SKIP_ROWS;
   e["UNPACK_SKIP_PIXELS"] = GL_UNPACK_SKIP_PIXELS;
   e["UNPACK_ALIGNMENT"] = GL_UNPACK_ALIGNMENT;
   e["PACK_SWAP_BYTES"] = GL_PACK_SWAP_BYTES;
   e["PACK_LSB_FIRST"] = GL_PACK_LSB_FIRST;
   e["PACK_ROW_LENGTH"] = GL_PACK_ROW_LENGTH;
   e["PACK_SKIP_ROWS"] = GL_PACK_SKIP_ROWS;
   e["PACK_SKIP_PIXELS"] = GL_PACK_SKIP_PIXELS;
   e["PACK_ALIGNMENT"] = GL_PACK_ALIGNMENT;
   e["MAP_COLOR"] = GL_MAP_COLOR;
   e["MAP_STENCIL"] = GL_MAP_STENCIL;
   e["INDEX_SHIFT"] = GL_INDEX_SHIFT;
   e["INDEX_OFFSET"] = GL_INDEX_OFFSET;
   e["RED_SCALE"] = GL_RED_SCALE;
   e["RED_BIAS"] = GL_RED_BIAS;
   e["ZOOM_X"] = GL_ZOOM_X;
   e["ZOOM_Y"] = GL_ZOOM_Y;
   e["GREEN_SCALE"] = GL_GREEN_SCALE;
   e["GREEN_BIAS"] = GL_GREEN_BIAS;
   e["BLUE_SCALE"] = GL_BLUE_SCALE;
   e["BLUE_BIAS"] = GL_BLUE_BIAS;
   e["ALPHA_SCALE"] = GL_ALPHA_SCALE;
   e["ALPHA_BIAS"] = GL_ALPHA_BIAS;
   e["DEPTH_SCALE"] = GL_DEPTH_SCALE;
   e["DEPTH_BIAS"] = GL_DEPTH_BIAS;
   e["MAX_EVAL_ORDER"] = GL_MAX_EVAL_ORDER;
   e["MAX_LIGHTS"] = GL_MAX_LIGHTS;
   e["MAX_CLIP_PLANES"] = GL_MAX_CLIP_PLANES;
   e["MAX_TEXTURE_SIZE"] = GL_MAX_TEXTURE_SIZE;
   e["MAX_PIXEL_MAP_TABLE"] = GL_MAX_PIXEL_MAP_TABLE;
   e["MAX_ATTRIB_STACK_DEPTH"] = GL_MAX_ATTRIB_STACK_DEPTH;
   e["MAX_MODELVIEW_STACK_DEPTH"] = GL_MAX_MODELVIEW_STACK_DEPTH;
   e["MAX_NAME_STACK_DEPTH"] = GL_MAX_NAME_STACK_DEPTH;
   e["MAX_PROJECTION_STACK_DEPTH"] = GL_MAX_PROJECTION_STACK_DEPTH;
   e["MAX_TEXTURE_STACK_DEPTH"] = GL_MAX_TEXTURE_STACK_DEPTH;
   e["MAX_VIEWPORT_DIMS"] = GL_MAX_VIEWPORT_DIMS;
   e["MAX_CLIENT_ATTRIB_STACK_DEPTH"] = GL_MAX_CLIENT_ATTRIB_STACK_DEPTH;
   e["SUBPIXEL_BITS"] = GL_SUBPIXEL_BITS;
   e["INDEX_BITS"] = GL_INDEX_BITS;
   e["RED_BITS"] = GL_RED_BITS;
   e["GREEN_BITS"] = GL_GREEN_BITS;
   e["BLUE_BITS"] = GL_BLUE_BITS;
   e["ALPHA_BITS"] = GL_ALPHA_BITS;
   e["DEPTH_BITS"] = GL_DEPTH_BITS;
   e["STENCIL_BITS"] = GL_STENCIL_BITS;
   e["ACCUM_RED_BITS"] = GL_ACCUM_RED_BITS;
   e["ACCUM_GREEN_BITS"] = GL_ACCUM_GREEN_BITS;
   e["ACCUM_BLUE_BITS"] = GL_ACCUM_BLUE_BITS;
   e["ACCUM_ALPHA_BITS"] = GL_ACCUM_ALPHA_BITS;
   e["NAME_STACK_DEPTH"] = GL_NAME_STACK_DEPTH;
   e["AUTO_NORMAL"] = GL_AUTO_NORMAL;
   e["MAP1_COLOR_4"] = GL_MAP1_COLOR_4;
   e["MAP1_INDEX"] = GL_MAP1_INDEX;
   e["MAP1_NORMAL"] = GL_MAP1_NORMAL;
   e["MAP1_TEXTURE_COORD_1"] = GL_MAP1_TEXTURE_COORD_1;
   e["MAP1_TEXTURE_COORD_2"] = GL_MAP1_TEXTURE_COORD_2;
   e["MAP1_TEXTURE_COORD_3"] = GL_MAP1_TEXTURE_COORD_3;
   e["MAP1_TEXTURE_COORD_4"] = GL_MAP1_TEXTURE_COORD_4;
   e["MAP1_VERTEX_3"] = GL_MAP1_VERTEX_3;
   e["MAP1_VERTEX_4"] = GL_MAP1_VERTEX_4;
   e["MAP2_COLOR_4"] = GL_MAP2_COLOR_4;
   e["MAP2_INDEX"] = GL_MAP2_INDEX;
   e["MAP2_NORMAL"] = GL_MAP2_NORMAL;
   e["MAP2_TEXTURE_COORD_1"] = GL_MAP2_TEXTURE_COORD_1;
   e["MAP2_TEXTURE_COORD_2"] = GL_MAP2_TEXTURE_COORD_2;
   e["MAP2_TEXTURE_COORD_3"] = GL_MAP2_TEXTURE_COORD_3;
   e["MAP2_TEXTURE_COORD_4"] = GL_MAP2_TEXTURE_COORD_4;
   e["MAP2_VERTEX_3"] = GL_MAP2_VERTEX_3;
   e["MAP2_VERTEX_4"] = GL_MAP2_VERTEX_4;
   e["MAP1_GRID_DOMAIN"] = GL_MAP1_GRID_DOMAIN;
   e["MAP1_GRID_SEGMENTS"] = GL_MAP1_GRID_SEGMENTS;
   e["MAP2_GRID_DOMAIN"] = GL_MAP2_GRID_DOMAIN;
   e["MAP2_GRID_SEGMENTS"] = GL_MAP2_GRID_SEGMENTS;
   e["TEXTURE_1D"] = GL_TEXTURE_1D;
   e["TEXTURE_2D"] = GL_TEXTURE_2D;
   e["FEEDBACK_BUFFER_POINTER"] = GL_FEEDBACK_BUFFER_POINTER;
   e["FEEDBACK_BUFFER_SIZE"] = GL_FEEDBACK_BUFFER_SIZE;
   e["FEEDBACK_BUFFER_TYPE"] = GL_FEEDBACK_BUFFER_TYPE;
   e["SELECTION_BUFFER_POINTER"] = GL_SELECTION_BUFFER_POINTER;
   e["SELECTION_BUFFER_SIZE"] = GL_SELECTION_BUFFER_SIZE;
   e["TEXTURE_WIDTH"] = GL_TEXTURE_WIDTH;
   e["TRANSFORM_BIT"] = GL_TRANSFORM_BIT;
   e["TEXTURE_HEIGHT"] = GL_TEXTURE_HEIGHT;
   e["TEXTURE_INTERNAL_FORMAT"] = GL_TEXTURE_INTERNAL_FORMAT;
   e["TEXTURE_BORDER_COLOR"] = GL_TEXTURE_BORDER_COLOR;
   e["TEXTURE_BORDER"] = GL_TEXTURE_BORDER;
   e["DONT_CARE"] = GL_DONT_CARE;
   e["FASTEST"] = GL_FASTEST;
   e["NICEST"] = GL_NICEST;
   e["AMBIENT"] = GL_AMBIENT;
   e["DIFFUSE"] = GL_DIFFUSE;
   e["SPECULAR"] = GL_SPECULAR;
   e["POSITION"] = GL_POSITION;
   e["SPOT_DIRECTION"] = GL_SPOT_DIRECTION;
   e["SPOT_EXPONENT"] = GL_SPOT_EXPONENT;
   e["SPOT_CUTOFF"] = GL_SPOT_CUTOFF;
   e["CONSTANT_ATTENUATION"] = GL_CONSTANT_ATTENUATION;
   e["LINEAR_ATTENUATION"] = GL_LINEAR_ATTENUATION;
   e["QUADRATIC_ATTENUATION"] = GL_QUADRATIC_ATTENUATION;
   e["COMPILE"] = GL_COMPILE;
   e["COMPILE_AND_EXECUTE"] = GL_COMPILE_AND_EXECUTE;
   e["BYTE"] = GL_BYTE;
   e["UNSIGNED_BYTE"] = GL_UNSIGNED_BYTE;
   e["SHORT"] = GL_SHORT;
   e["UNSIGNED_SHORT"] = GL_UNSIGNED_SHORT;
   e["INT"] = GL_INT;
   e["UNSIGNED_INT"] = GL_UNSIGNED_INT;
   e["FLOAT"] = GL_FLOAT;
   e["2_BYTES"] = GL_2_BYTES;
   e["3_BYTES"] = GL_3_BYTES;
   e["4_BYTES"] = GL_4_BYTES;
   e["DOUBLE"] = GL_DOUBLE;
   e["CLEAR"] = GL_CLEAR;
   e["AND"] = GL_AND;
   e["AND_REVERSE"] = GL_AND_REVERSE;
   e["COPY"] = GL_COPY;
   e["AND_INVERTED"] = GL_AND_INVERTED;
   e["NOOP"] = GL_NOOP;
   e["XOR"] = GL_XOR;
   e["OR"] = GL_OR;
   e["NOR"] = GL_NOR;
   e["EQUIV"] = GL_EQUIV;
   e["INVERT"] = GL_INVERT;
   e["OR_REVERSE"] = GL_OR_REVERSE;
   e["COPY_INVERTED"] = GL_COPY_INVERTED;
   e["OR_INVERTED"] = GL_OR_INVERTED;
   e["NAND"] = GL_NAND;
   e["SET"] = GL_SET;
   e["EMISSION"] = GL_EMISSION;
   e["SHININESS"] = GL_SHININESS;
   e["AMBIENT_AND_DIFFUSE"] = GL_AMBIENT_AND_DIFFUSE;
   e["COLOR_INDEXES"] = GL_COLOR_INDEXES;
   e["MODELVIEW"] = GL_MODELVIEW;
   e["PROJECTION"] = GL_PROJECTION;
   e["TEXTURE"] = GL_TEXTURE;
   e["COLOR"] = GL_COLOR;
   e["DEPTH"] = GL_DEPTH;
   e["STENCIL"] = GL_STENCIL;
   e["COLOR_INDEX"] = GL_COLOR_INDEX;
   e["STENCIL_INDEX"] = GL_STENCIL_INDEX;
   e["DEPTH_COMPONENT"] = GL_DEPTH_COMPONENT;
   e["RED"] = GL_RED;
   e["GREEN"] = GL_GREEN;
   e["BLUE"] = GL_BLUE;
   e["ALPHA"] = GL_ALPHA;
   e["RGB"] = GL_RGB;
   e["RGBA"] = GL_RGBA;
   e["LUMINANCE"] = GL_LUMINANCE;
   e["LUMINANCE_ALPHA"] = GL_LUMINANCE_ALPHA;
   e["BITMAP"] = GL_BITMAP;
   e["POINT"] = GL_POINT;
   e["LINE"] = GL_LINE;
   e["FILL"] = GL_FILL;
   e["RENDER"] = GL_RENDER;
   e["FEEDBACK"] = GL_FEEDBACK;
   e["SELECT"] = GL_SELECT;
   e["FLAT"] = GL_FLAT;
   e["SMOOTH"] = GL_SMOOTH;
   e["KEEP"] = GL_KEEP;
   e["REPLACE"] = GL_REPLACE;
   e["INCR"] = GL_INCR;
   e["DECR"] = GL_DECR;
   e["VENDOR"] = GL_VENDOR;
   e["RENDERER"] = GL_RENDERER;
   e["VERSION"] = GL_VERSION;
   e["EXTENSIONS"] = GL_EXTENSIONS;
   e["S"] = GL_S;
   e["ENABLE_BIT"] = GL_ENABLE_BIT;
   e["T"] = GL_T;
   e["R"] = GL_R;
   e["Q"] = GL_Q;
   e["MODULATE"] = GL_MODULATE;
   e["DECAL"] = GL_DECAL;
   e["TEXTURE_ENV_MODE"] = GL_TEXTURE_ENV_MODE;
   e["TEXTURE_ENV_COLOR"] = GL_TEXTURE_ENV_COLOR;
   e["TEXTURE_ENV"] = GL_TEXTURE_ENV;
   e["EYE_LINEAR"] = GL_EYE_LINEAR;
   e["OBJECT_LINEAR"] = GL_OBJECT_LINEAR;
   e["SPHERE_MAP"] = GL_SPHERE_MAP;
   e["TEXTURE_GEN_MODE"] = GL_TEXTURE_GEN_MODE;
   e["OBJECT_PLANE"] = GL_OBJECT_PLANE;
   e["EYE_PLANE"] = GL_EYE_PLANE;
   e["NEAREST"] = GL_NEAREST;
   e["LINEAR"] = GL_LINEAR;
   e["NEAREST_MIPMAP_NEAREST"] = GL_NEAREST_MIPMAP_NEAREST;
   e["LINEAR_MIPMAP_NEAREST"] = GL_LINEAR_MIPMAP_NEAREST;
   e["NEAREST_MIPMAP_LINEAR"] = GL_NEAREST_MIPMAP_LINEAR;
   e["LINEAR_MIPMAP_LINEAR"] = GL_LINEAR_MIPMAP_LINEAR;
   e["TEXTURE_MAG_FILTER"] = GL_TEXTURE_MAG_FILTER;
   e["TEXTURE_MIN_FILTER"] = GL_TEXTURE_MIN_FILTER;
   e["TEXTURE_WRAP_S"] = GL_TEXTURE_WRAP_S;
   e["TEXTURE_WRAP_T"] = GL_TEXTURE_WRAP_T;
   e["CLAMP"] = GL_CLAMP;
   e["REPEAT"] = GL_REPEAT;
   e["POLYGON_OFFSET_UNITS"] = GL_POLYGON_OFFSET_UNITS;
   e["POLYGON_OFFSET_POINT"] = GL_POLYGON_OFFSET_POINT;
   e["POLYGON_OFFSET_LINE"] = GL_POLYGON_OFFSET_LINE;
   e["R3_G3_B2"] = GL_R3_G3_B2;
   e["V2F"] = GL_V2F;
   e["V3F"] = GL_V3F;
   e["C4UB_V2F"] = GL_C4UB_V2F;
   e["C4UB_V3F"] = GL_C4UB_V3F;
   e["C3F_V3F"] = GL_C3F_V3F;
   e["N3F_V3F"] = GL_N3F_V3F;
   e["C4F_N3F_V3F"] = GL_C4F_N3F_V3F;
   e["T2F_V3F"] = GL_T2F_V3F;
   e["T4F_V4F"] = GL_T4F_V4F;
   e["T2F_C4UB_V3F"] = GL_T2F_C4UB_V3F;
   e["T2F_C3F_V3F"] = GL_T2F_C3F_V3F;
   e["T2F_N3F_V3F"] = GL_T2F_N3F_V3F;
   e["T2F_C4F_N3F_V3F"] = GL_T2F_C4F_N3F_V3F;
   e["T4F_C4F_N3F_V4F"] = GL_T4F_C4F_N3F_V4F;
   e["CLIP_PLANE0"] = GL_CLIP_PLANE0;
   e["CLIP_PLANE1"] = GL_CLIP_PLANE1;
   e["CLIP_PLANE2"] = GL_CLIP_PLANE2;
   e["CLIP_PLANE3"] = GL_CLIP_PLANE3;
   e["CLIP_PLANE4"] = GL_CLIP_PLANE4;
   e["CLIP_PLANE5"] = GL_CLIP_PLANE5;
   e["LIGHT0"] = GL_LIGHT0;
   e["COLOR_BUFFER_BIT"] = GL_COLOR_BUFFER_BIT;
   e["LIGHT1"] = GL_LIGHT1;
   e["LIGHT2"] = GL_LIGHT2;
   e["LIGHT3"] = GL_LIGHT3;
   e["LIGHT4"] = GL_LIGHT4;
   e["LIGHT5"] = GL_LIGHT5;
   e["LIGHT6"] = GL_LIGHT6;
   e["LIGHT7"] = GL_LIGHT7;
   e["HINT_BIT"] = GL_HINT_BIT;
   e["POLYGON_OFFSET_FILL"] = GL_POLYGON_OFFSET_FILL;
   e["POLYGON_OFFSET_FACTOR"] = GL_POLYGON_OFFSET_FACTOR;
   e["ALPHA4"] = GL_ALPHA4;
   e["ALPHA8"] = GL_ALPHA8;
   e["ALPHA12"] = GL_ALPHA12;
   e["ALPHA16"] = GL_ALPHA16;
   e["LUMINANCE4"] = GL_LUMINANCE4;
   e["LUMINANCE8"] = GL_LUMINANCE8;
   e["LUMINANCE12"] = GL_LUMINANCE12;
   e["LUMINANCE16"] = GL_LUMINANCE16;
   e["LUMINANCE4_ALPHA4"] = GL_LUMINANCE4_ALPHA4;
   e["LUMINANCE6_ALPHA2"] = GL_LUMINANCE6_ALPHA2;
   e["LUMINANCE8_ALPHA8"] = GL_LUMINANCE8_ALPHA8;
   e["LUMINANCE12_ALPHA4"] = GL_LUMINANCE12_ALPHA4;
   e["LUMINANCE12_ALPHA12"] = GL_LUMINANCE12_ALPHA12;
   e["LUMINANCE16_ALPHA16"] = GL_LUMINANCE16_ALPHA16;
   e["INTENSITY"] = GL_INTENSITY;
   e["INTENSITY4"] = GL_INTENSITY4;
   e["INTENSITY8"] = GL_INTENSITY8;
   e["INTENSITY12"] = GL_INTENSITY12;
   e["INTENSITY16"] = GL_INTENSITY16;
   e["RGB4"] = GL_RGB4;
   e["RGB5"] = GL_RGB5;
   e["RGB8"] = GL_RGB8;
   e["RGB10"] = GL_RGB10;
   e["RGB12"] = GL_RGB12;
   e["RGB16"] = GL_RGB16;
   e["RGBA2"] = GL_RGBA2;
   e["RGBA4"] = GL_RGBA4;
   e["RGB5_A1"] = GL_RGB5_A1;
   e["RGBA8"] = GL_RGBA8;
   e["RGB10_A2"] = GL_RGB10_A2;
   e["RGBA12"] = GL_RGBA12;
   e["RGBA16"] = GL_RGBA16;
   e["TEXTURE_RED_SIZE"] = GL_TEXTURE_RED_SIZE;
   e["TEXTURE_GREEN_SIZE"] = GL_TEXTURE_GREEN_SIZE;
   e["TEXTURE_BLUE_SIZE"] = GL_TEXTURE_BLUE_SIZE;
   e["TEXTURE_ALPHA_SIZE"] = GL_TEXTURE_ALPHA_SIZE;
   e["TEXTURE_LUMINANCE_SIZE"] = GL_TEXTURE_LUMINANCE_SIZE;
   e["TEXTURE_INTENSITY_SIZE"] = GL_TEXTURE_INTENSITY_SIZE;
   e["PROXY_TEXTURE_1D"] = GL_PROXY_TEXTURE_1D;
   e["PROXY_TEXTURE_2D"] = GL_PROXY_TEXTURE_2D;
   e["TEXTURE_PRIORITY"] = GL_TEXTURE_PRIORITY;
   e["TEXTURE_RESIDENT"] = GL_TEXTURE_RESIDENT;
   e["TEXTURE_BINDING_1D"] = GL_TEXTURE_BINDING_1D;
   e["TEXTURE_BINDING_2D"] = GL_TEXTURE_BINDING_2D;
   e["VERTEX_ARRAY"] = GL_VERTEX_ARRAY;
   e["NORMAL_ARRAY"] = GL_NORMAL_ARRAY;
   e["COLOR_ARRAY"] = GL_COLOR_ARRAY;
   e["INDEX_ARRAY"] = GL_INDEX_ARRAY;
   e["TEXTURE_COORD_ARRAY"] = GL_TEXTURE_COORD_ARRAY;
   e["EDGE_FLAG_ARRAY"] = GL_EDGE_FLAG_ARRAY;
   e["VERTEX_ARRAY_SIZE"] = GL_VERTEX_ARRAY_SIZE;
   e["VERTEX_ARRAY_TYPE"] = GL_VERTEX_ARRAY_TYPE;
   e["VERTEX_ARRAY_STRIDE"] = GL_VERTEX_ARRAY_STRIDE;
   e["NORMAL_ARRAY_TYPE"] = GL_NORMAL_ARRAY_TYPE;
   e["NORMAL_ARRAY_STRIDE"] = GL_NORMAL_ARRAY_STRIDE;
   e["COLOR_ARRAY_SIZE"] = GL_COLOR_ARRAY_SIZE;
   e["COLOR_ARRAY_TYPE"] = GL_COLOR_ARRAY_TYPE;
   e["COLOR_ARRAY_STRIDE"] = GL_COLOR_ARRAY_STRIDE;
   e["INDEX_ARRAY_TYPE"] = GL_INDEX_ARRAY_TYPE;
   e["INDEX_ARRAY_STRIDE"] = GL_INDEX_ARRAY_STRIDE;
   e["TEXTURE_COORD_ARRAY_SIZE"] = GL_TEXTURE_COORD_ARRAY_SIZE;
   e["TEXTURE_COORD_ARRAY_TYPE"] = GL_TEXTURE_COORD_ARRAY_TYPE;
   e["TEXTURE_COORD_ARRAY_STRIDE"] = GL_TEXTURE_COORD_ARRAY_STRIDE;
   e["EDGE_FLAG_ARRAY_STRIDE"] = GL_EDGE_FLAG_ARRAY_STRIDE;
   e["VERTEX_ARRAY_POINTER"] = GL_VERTEX_ARRAY_POINTER;
   e["NORMAL_ARRAY_POINTER"] = GL_NORMAL_ARRAY_POINTER;
   e["COLOR_ARRAY_POINTER"] = GL_COLOR_ARRAY_POINTER;
   e["INDEX_ARRAY_POINTER"] = GL_INDEX_ARRAY_POINTER;
   e["TEXTURE_COORD_ARRAY_POINTER"] = GL_TEXTURE_COORD_ARRAY_POINTER;
   e["EDGE_FLAG_ARRAY_POINTER"] = GL_EDGE_FLAG_ARRAY_POINTER;
   e["COLOR_INDEX1_EXT"] = GL_COLOR_INDEX1_EXT;
   e["COLOR_INDEX2_EXT"] = GL_COLOR_INDEX2_EXT;
   e["COLOR_INDEX4_EXT"] = GL_COLOR_INDEX4_EXT;
   e["COLOR_INDEX8_EXT"] = GL_COLOR_INDEX8_EXT;
   e["COLOR_INDEX12_EXT"] = GL_COLOR_INDEX12_EXT;
   e["COLOR_INDEX16_EXT"] = GL_COLOR_INDEX16_EXT;
   e["EVAL_BIT"] = GL_EVAL_BIT;
   e["LIST_BIT"] = GL_LIST_BIT;
   e["TEXTURE_BIT"] = GL_TEXTURE_BIT;
   e["SCISSOR_BIT"] = GL_SCISSOR_BIT;
   e["ALL_ATTRIB_BITS"] = GL_ALL_ATTRIB_BITS;
   e["CLIENT_ALL_ATTRIB_BITS"] = GL_CLIENT_ALL_ATTRIB_BITS;
}

void OpenGLWrapper::bindFboEnums(sol::table& table) {
   auto e = table;
   e["INVALID_FRAMEBUFFER_OPERATION"] = GL_INVALID_FRAMEBUFFER_OPERATION;
   e["FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"] = GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
   e["FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"] = GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
   e["FRAMEBUFFER_ATTACHMENT_RED_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE;
   e["FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
   e["FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
   e["FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
   e["FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
   e["FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"] = GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
   e["FRAMEBUFFER_DEFAULT"] = GL_FRAMEBUFFER_DEFAULT;
   e["FRAMEBUFFER_UNDEFINED"] = GL_FRAMEBUFFER_UNDEFINED;
   e["DEPTH_STENCIL_ATTACHMENT"] = GL_DEPTH_STENCIL_ATTACHMENT;
   e["INDEX"] = GL_INDEX;
   e["MAX_RENDERBUFFER_SIZE"] = GL_MAX_RENDERBUFFER_SIZE;
   e["DEPTH_STENCIL"] = GL_DEPTH_STENCIL;
   e["UNSIGNED_INT_24_8"] = GL_UNSIGNED_INT_24_8;
   e["DEPTH24_STENCIL8"] = GL_DEPTH24_STENCIL8;
   e["TEXTURE_STENCIL_SIZE"] = GL_TEXTURE_STENCIL_SIZE;
   e["UNSIGNED_NORMALIZED"] = GL_UNSIGNED_NORMALIZED;
   e["SRGB"] = GL_SRGB;
   e["DRAW_FRAMEBUFFER_BINDING"] = GL_DRAW_FRAMEBUFFER_BINDING;
   e["FRAMEBUFFER_BINDING"] = GL_FRAMEBUFFER_BINDING;
   e["RENDERBUFFER_BINDING"] = GL_RENDERBUFFER_BINDING;
   e["READ_FRAMEBUFFER"] = GL_READ_FRAMEBUFFER;
   e["DRAW_FRAMEBUFFER"] = GL_DRAW_FRAMEBUFFER;
   e["READ_FRAMEBUFFER_BINDING"] = GL_READ_FRAMEBUFFER_BINDING;
   e["RENDERBUFFER_SAMPLES"] = GL_RENDERBUFFER_SAMPLES;
   e["FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"] = GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
   e["FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"] = GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
   e["FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"] = GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
   e["FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"] = GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
   e["FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"] = GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
   e["FRAMEBUFFER_COMPLETE"] = GL_FRAMEBUFFER_COMPLETE;
   e["FRAMEBUFFER_INCOMPLETE_ATTACHMENT"] = GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
   e["FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"] = GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
   e["FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER"] = GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER;
   e["FRAMEBUFFER_INCOMPLETE_READ_BUFFER"] = GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER;
   e["FRAMEBUFFER_UNSUPPORTED"] = GL_FRAMEBUFFER_UNSUPPORTED;
   e["MAX_COLOR_ATTACHMENTS"] = GL_MAX_COLOR_ATTACHMENTS;
   e["COLOR_ATTACHMENT0"] = GL_COLOR_ATTACHMENT0;
   e["COLOR_ATTACHMENT1"] = GL_COLOR_ATTACHMENT1;
   e["COLOR_ATTACHMENT2"] = GL_COLOR_ATTACHMENT2;
   e["COLOR_ATTACHMENT3"] = GL_COLOR_ATTACHMENT3;
   e["COLOR_ATTACHMENT4"] = GL_COLOR_ATTACHMENT4;
   e["COLOR_ATTACHMENT5"] = GL_COLOR_ATTACHMENT5;
   e["COLOR_ATTACHMENT6"] = GL_COLOR_ATTACHMENT6;
   e["COLOR_ATTACHMENT7"] = GL_COLOR_ATTACHMENT7;
   e["COLOR_ATTACHMENT8"] = GL_COLOR_ATTACHMENT8;
   e["COLOR_ATTACHMENT9"] = GL_COLOR_ATTACHMENT9;
   e["COLOR_ATTACHMENT10"] = GL_COLOR_ATTACHMENT10;
   e["COLOR_ATTACHMENT11"] = GL_COLOR_ATTACHMENT11;
   e["COLOR_ATTACHMENT12"] = GL_COLOR_ATTACHMENT12;
   e["COLOR_ATTACHMENT13"] = GL_COLOR_ATTACHMENT13;
   e["COLOR_ATTACHMENT14"] = GL_COLOR_ATTACHMENT14;
   e["COLOR_ATTACHMENT15"] = GL_COLOR_ATTACHMENT15;
   e["DEPTH_ATTACHMENT"] = GL_DEPTH_ATTACHMENT;
   e["STENCIL_ATTACHMENT"] = GL_STENCIL_ATTACHMENT;
   e["FRAMEBUFFER"] = GL_FRAMEBUFFER;
   e["RENDERBUFFER"] = GL_RENDERBUFFER;
   e["RENDERBUFFER_WIDTH"] = GL_RENDERBUFFER_WIDTH;
   e["RENDERBUFFER_HEIGHT"] = GL_RENDERBUFFER_HEIGHT;
   e["RENDERBUFFER_INTERNAL_FORMAT"] = GL_RENDERBUFFER_INTERNAL_FORMAT;
   e["STENCIL_INDEX1"] = GL_STENCIL_INDEX1;
   e["STENCIL_INDEX4"] = GL_STENCIL_INDEX4;
   e["STENCIL_INDEX8"] = GL_STENCIL_INDEX8;
   e["STENCIL_INDEX16"] = GL_STENCIL_INDEX16;
   e["RENDERBUFFER_RED_SIZE"] = GL_RENDERBUFFER_RED_SIZE;
   e["RENDERBUFFER_GREEN_SIZE"] = GL_RENDERBUFFER_GREEN_SIZE;
   e["RENDERBUFFER_BLUE_SIZE"] = GL_RENDERBUFFER_BLUE_SIZE;
   e["RENDERBUFFER_ALPHA_SIZE"] = GL_RENDERBUFFER_ALPHA_SIZE;
   e["RENDERBUFFER_DEPTH_SIZE"] = GL_RENDERBUFFER_DEPTH_SIZE;
   e["RENDERBUFFER_STENCIL_SIZE"] = GL_RENDERBUFFER_STENCIL_SIZE;
   e["FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"] = GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
   e["MAX_SAMPLES"] = GL_MAX_SAMPLES;
}
